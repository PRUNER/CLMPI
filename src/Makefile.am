# Assuming foo is a program or library:
#  foo_CFLAGS:   Additional C compiler flags
#  foo_CPPFLAGS: Additional preprocessor flags (-Is and -Ds)
#  foo_LDADD:    Additional link objects, -ls and -Ls (if foo is a program)
#  foo_LIBADD:   Additional link objects, -ls and -Ls (if foo is a library) 
#  foo LDFLAGS:  Additional linker flags
# The default value for foo_XXXFLAGS is $(AM_XXXFLAGS).

AM_CFLAGS = -fPIC -std=c++0x -pthread -g -lstdc++
AM_CXXFLAGS = $(AM_CFLAGS)

libclmpi_la_LIBRARY = libclmpi.la
libpbmpi_la_LIBRARY = libpbmpi.la
lib_LTLIBRARIES = $(libclmpi_la_LIBRARY) $(libpbmpi_la_LIBRARY)

# ===== libclmpi =====
libclmpi_la_SOURCES = 	clmpi_status.c \
			clmpi.cpp \
			clmpi_piggyback.c \
			clmpi_request.cpp 
libclmpi_la_CPPFLAGS = -DPB_DATATYPE2 
# user-defined custom name
libclmpi_la_OBJECT    = ./libclmpi_la-libclmpi.lo
libclmpi_la_OBJECTS_O = $(libclmpi_la_OBJECTS:%.lo=%.o) 
libclmpi_la_STACK_PMPI_OBJECT_O = ./libclmpi.o
libclmpi_la_LIBS_OBJECTS_O = $(libclmpi_la_OBJECTS:%.lo=.libs/%.o) 
libclmpi_la_LIBS_STACK_PMPI_OBJECT_O = ./.libs/libclmpi.o


# ===== libpbmpi =====
libpbmpi_la_SOURCES = 	clmpi_status.c \
			pbmpi.cpp \
			clmpi_piggyback.c \
			clmpi_request.cpp 
libpbmpi_la_CPPFLAGS = -DPB_DATATYPE2 
# user-defined custom name
libpbmpi_la_OBJECT    = ./libpbmpi_la-libpbmpi.lo
libpbmpi_la_OBJECTS_O = $(libpbmpi_la_OBJECTS:%.lo=%.o) 
libpbmpi_la_STACK_PMPI_OBJECT_O = ./libpbmpi.o
libpbmpi_la_LIBS_OBJECTS_O = $(libpbmpi_la_OBJECTS:%.lo=.libs/%.o) 
libpbmpi_la_LIBS_STACK_PMPI_OBJECT_O = ./.libs/libpbmpi.o

# ===== Header file installation =====
include_HEADERS   = clmpi.h pbmpi.h

# ===== Object file installation =====
install_pic_libdir = $(libdir)/.libs
dist_install_pic_lib_SCRIPTS = $(libclmpi_la_LIBS_STACK_PMPI_OBJECT_O) $(libpbmpi_la_LIBS_STACK_PMPI_OBJECT_O)
install_non_pic_libdir = $(libdir)
dist_install_non_pic_lib_SCRIPTS = $(libclmpi_la_STACK_PMPI_OBJECT_O) $(libpbmpi_la_STACK_PMPI_OBJECT_O)



$(libclmpi_la_LIBRARY): $(libclmpi_la_OBJECTS) $(libclmpi_la_DEPENDENCIES) $(libclmpi_la_OBJECTS_O) $(libclmpi_la_LIBS_OBJECTS_O) 
	$(stack_pmpi_DIR)/stack_pmpi $(libclmpi_la_STACK_PMPI_OBJECT_O) $(libclmpi_la_OBJECTS_O)
	$(stack_pmpi_DIR)/stack_pmpi $(libclmpi_la_LIBS_STACK_PMPI_OBJECT_O) $(libclmpi_la_LIBS_OBJECTS_O)
	echo "# Generated by `$(abs_top_builddir)/libtool --version | head -n 1`" >  $(libclmpi_la_OBJECT)
	echo "pic_object='$(libclmpi_la_LIBS_STACK_PMPI_OBJECT_O)'" >> $(libclmpi_la_OBJECT)
	echo "non_pic_object='$(libclmpi_la_STACK_PMPI_OBJECT_O)'" >> $(libclmpi_la_OBJECT)
	$(CXXLINK) -rpath $(libdir) $(libclmpi_la_OBJECT) $(libclmpi_la_LIBADD) $(LIBS)

$(libpbmpi_la_LIBRARY): $(libpbmpi_la_OBJECTS) $(libpbmpi_la_DEPENDENCIES) $(libpbmpi_la_OBJECTS_O) $(libpbmpi_la_LIBS_OBJECTS_O) 
	$(stack_pmpi_DIR)/stack_pmpi $(libpbmpi_la_STACK_PMPI_OBJECT_O) $(libpbmpi_la_OBJECTS_O)
	$(stack_pmpi_DIR)/stack_pmpi $(libpbmpi_la_LIBS_STACK_PMPI_OBJECT_O) $(libpbmpi_la_LIBS_OBJECTS_O)
	echo "# Generated by `$(abs_top_builddir)/libtool --version | head -n 1`" >  $(libpbmpi_la_OBJECT)
	echo "pic_object='$(libpbmpi_la_LIBS_STACK_PMPI_OBJECT_O)'" >> $(libpbmpi_la_OBJECT)
	echo "non_pic_object='$(libpbmpi_la_STACK_PMPI_OBJECT_O)'" >> $(libpbmpi_la_OBJECT)
	$(CXXLINK) -rpath $(libdir) $(libpbmpi_la_OBJECT) $(libpbmpi_la_LIBADD) $(LIBS)
