# Assuming foo is a program or library:
#  foo_CFLAGS:   Additional C compiler flags
#  foo_CPPFLAGS: Additional preprocessor flags (-Is and -Ds)
#  foo_LDADD:    Additional link objects, -ls and -Ls (if foo is a program)
#  foo_LIBADD:   Additional link objects, -ls and -Ls (if foo is a library) 
#  foo LDFLAGS:  Additional linker flags
# The default value for foo_XXXFLAGS is $(AM_XXXFLAGS).

AM_CFLAGS = -fPIC -std=c++0x -pthread -g
AM_CXXFLAGS = $(AM_CFLAGS)

lib_LIBRARIES   = libclmpi.a libpbmpi.a

# ===== libclmpi =====
libclmpi_a_LIB  = libclmpi.a
libclmpi_so_LIB = libclmpi.so
libclmpi_a_SOURCES = 	clmpi_status.c \
			clmpi.cpp \
			clmpi_piggyback.c \
			clmpi_request.cpp 
#libclmpi_a_OBJECTS = $(libclmpi_a_SOURCES:%.cpp=%.o) <= automake will create this variable
libclmpi_a_CPPFLAGS = -DPB_DATATYPE2 
libclmpi_a_STACK_PMPI_OBJECT = libclmpi_stack_pmpi.o


# ===== libpbmpi =====
libpbmpi_a_LIB  = libpbmpi.a
libpbmpi_so_LIB = libpbmpi.so
libpbmpi_a_SOURCES = 	clmpi_status.c \
			pbmpi.cpp \
			clmpi_piggyback.c \
			clmpi_request.cpp 
#libpbmpi_a_OBJECTS = $(librpbmpi_a_SOURCES:%.cpp=%.o) <= automake will create this variable
libpbmpi_a_CPPFLAGS = -DPB_DATATYPE2 
libpbmpi_a_STACK_PMPI_OBJECT = libpbmpi_stack_pmpi.o

$(libclmpi_a_LIB): $(libclmpi_a_OBJECTS)
	$(stack_pmpi_DIR)/stack_pmpi $(libclmpi_a_STACK_PMPI_OBJECT) 0 $^
	ar cr $@ $(libclmpi_a_STACK_PMPI_OBJECT)
	ranlib $@

$(libclmpi_so_LIB): $(libclmpi_a_LIB)
	$(MPICC) $(AM_CXXFLAGS) $(libclmpi_a_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) -shared -o $@ $(libclmpoi_a_STACK_PMPI_OBJECT)


$(libpbmpi_a_LIB): $(libpbmpi_a_OBJECTS)
	$(stack_pmpi_DIR)/stack_pmpi $(libpbmpi_a_STACK_PMPI_OBJECT) 0 $^
	ar cr $@ $(libpbmpi_a_STACK_PMPI_OBJECT)
	ranlib $@

$(libpbmpi_so_LIB): $(libpbmpi_a_LIB)
	$(MPICC) $(AM_CXXFLAGS) $(libpbmpi_a_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) -shared -o $@ $(libclmpoi_a_STACK_PMPI_OBJECT)



all-local: $(libclmpi_a_LIB) $(libclmpi_so_LIB) $(libpbmpi_a_LIB) $(libpbmpi_so_LIB)

clean-local:
	-rm -f $(libclmpi_a_LIB) $(libclmpi_so_LIB) $(libclmpi_a_STACK_PMPI_OBJECT)
	-rm -f $(libpbmpi_a_LIB) $(libpbmpi_so_LIB) $(libpbmpi_a_STACK_PMPI_OBJECT)